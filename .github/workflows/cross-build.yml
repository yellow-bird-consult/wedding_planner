name: Rust Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

        # Define the Rust toolchain and target platforms to cross-compile for
        rust_toolchain: [stable]
        target_platform: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-unknown-linux-gnu, aarch64-apple-darwin]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: install arm for mac
        run: |
          rustup toolchain install stable-aarch64-apple-darwin
          rustup target add aarch64-apple-darwin

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          override: true

      - name: Install cross
        run: cargo install cross

      - name: Build for ${{ matrix.target_platform }}
        run: cross build --release --target ${{ matrix.target_platform }}

      - name: Archive release files
        uses: actions/upload-artifact@v2
        with:
          name: release-${{ matrix.target_platform }}
          path: target/${{ matrix.target_platform }}/release/

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/x86_64-unknown-linux-gnu/release/*
            target/aarch64-unknown-linux-gnu/release/*
            ${{ matrix.os == 'macos-latest' && matrix.rust_toolchain == 'stable' && matrix.target_platform == 'x86_64-apple-darwin' && env.MACOS_M1 != 'true' }}:
              target/x86_64-apple-darwin/release/*
            ${{ matrix.os == 'macos-latest' && matrix.rust_toolchain == 'stable' && matrix.target_platform == 'x86_64-apple-darwin' && env.MACOS_M1 == 'true' }}:
              target/universal/release/*
          tag_name: ${{ github.ref }}
          draft: false
          prerelease: false
